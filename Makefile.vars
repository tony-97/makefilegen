#==============================================================================
# Converts ascii string to lower
#==============================================================================
# $(1) : string to convert
export to_lower = $(subst A,a,$(subst B,b,$(subst C,c,$(subst D,d,$(subst E,e,$(subst F,f,$(subst G,g,$(subst H,h,$(subst I,i,$(subst J,j,$(subst K,k,$(subst L,l,$(subst M,m,$(subst N,n,$(subst O,o,$(subst P,p,$(subst Q,q,$(subst R,r,$(subst S,s,$(subst T,t,$(subst U,u,$(subst V,v,$(subst W,w,$(subst X,x,$(subst Y,y,$(subst Z,z,$1))))))))))))))))))))))))))

#==============================================================================
# Compares if matches the compiler
#==============================================================================
# $(1) : compiler to compare
# $(2) : compiler
COMPILER_NAME = $(findstring $(1),$(basename $(notdir $(2))))

#==============================================================================
# Check if its a compiler toolchain
#==============================================================================
# $(1) : c   compiler
# $(2) : c++ compiler
CHECK_COMPILER = $(filter $(1) $(2),$(call COMPILER_NAME,$(1),$(CC)) $(call COMPILER_NAME,$(2),$(CXX)))

define DEFINE_COMPILER
ifneq ($(call CHECK_COMPILER,$(1),$(2)),)
    ifndef CLANG
        export $(3) := 1
        ifneq ($(call COMPILER_NAME,$(2),$(CXX)),)
            export LD := $(CXX)
        else
            export LD := $(CC)
        endif
    endif
endif
endef

ifeq ($(TARGET),WEB)
    export CC  := emcc
    export CXX := em++
    export AR  := emar
else
    export AR := ar
endif

$(eval $(call DEFINE_COMPILER,clang,clang++,CLANG))
$(eval $(call DEFINE_COMPILER,gcc,g++,GCC))
$(eval $(call DEFINE_COMPILER,emcc,em++,EMSCRIPTEN))
$(eval $(call DEFINE_COMPILER,cl,cl,MSVC))

ifeq ($(OS),Windows_NT)
    export PLATFORM_HOST_WINDOWS := 1
else
    export PLATFORM_HOST_UNIX := 1
    UNAME_S := $(shell uname -s)
    ifeq ($(UNAME_S),Linux)
        export PLATFORM_HOST_LINUX := 1
    endif
    ifeq ($(UNAME_S),Darwin)
        export PLATFORM_HOST_DARWIN := 1
    endif
endif # detect more host platforms
